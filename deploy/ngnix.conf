# prevent from exiting in container
#daemon off;  # This is already passed as command line by the nginx dockerfile entrypoint.
worker_processes auto;

pid /run/nginx.pid;

events {
    worker_connections 768;
}

http {

    ##
    # Basic Settings

    # sendfile off in dev for no keepalive_timeout 65;
    # sendfile does not play nice with docker/VMs and cache disabling.
    sendfile off;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

     gzip_vary on;
     gzip_proxied any;
     gzip_comp_level 6;
     gzip_buffers 16 8k;
     # minimum http version required for us to use compression
     gzip_http_version 1.1;
     gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        error_log /var/log/nginx/file.log debug;

        listen          80 default_server;

        # Try to serve the files directly (like static images or the js files).
        # If cant we redirect to our app
        # root should be out of location block
        root /app;
        location = / {
            # index causes a redirect so the request will be handled in the next block (as if we hit /app/index.html)
            index index.html;
        }
        location / {
            try_files $uri @app;
        }

        location @app {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://api:5000;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }
    }
}
